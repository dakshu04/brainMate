import OpenAI from "openai";
import { SUMMARY_SYSTEM_PROMPT } from "./prompts";

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY!,
});

export async function generateSummaryFromOpenAI(pdfText: string) {
  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: "Rate the text based on resume of full stack dev roles",
        },
        {
          role: "user",
          content: `Transform this document into an engaging, easy-to-read summary with contextually relevant emojis and proper markdown formatting:\n\n${pdfText}`,
        },
      ],
      temperature: 0.7,
      max_tokens: 3000, // ✅ correct param name
    });

    // ✅ safer check to avoid undefined errors
    const content = completion.choices?.[0]?.message?.content;

    if (!content) {
      throw new Error("No summary was generated by the model.");
    }

    return content;
  } catch (error: any) {
    if (error?.status === 429) {
      throw new Error("RATE_LIMIT_EXCEEDED"); // handle rate limit gracefully
    }
    console.error("OpenAI API error:", error);
    throw error;
  }
}
